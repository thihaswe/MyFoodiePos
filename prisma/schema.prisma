// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Company {
  id        Int        @id @default(autoincrement())
  name      String
  address   String?
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users User[]
  locations Location[]
   isArchived Boolean @default(false)
}

model Location {
  id                   Int                   @id @default(autoincrement())
  name                 String
  company              Company               @relation(fields: [companyId], references: [id])
  companyId            Int
  disableLocationMenus DisableLocationMenu[]
   isArchived Boolean @default(false)
}

model DisableLocationMenu {
  id         Int      @id @default(autoincrement())
  location   Location @relation(fields: [locationId], references: [id])
  locationId Int
  createAt   DateTime @default(now())
  updatedAt  DateTime @updatedAt
   isArchived Boolean @default(false)
}

model MenuCategory {
  id                Int                @id @default(autoincrement())
   name      String
  menuCategoryMenus MenuCategoryMenu[]
  createAt          DateTime           @default(now())
  updatedAt         DateTime           @updatedAt
   isArchived Boolean @default(false)
}

model Menu {
  id                Int                 @id @default(autoincrement())
  name      String
  price Int
  menuCategoryMenus MenuCategoryMenu[]
  createAt          DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
  menuAddonCategories MenuAddonCategory[]
   isArchived Boolean @default(false)
}

model MenuCategoryMenu {
  id             Int          @id @default(autoincrement())
  menuCategoty   MenuCategory @relation(fields: [menuCategoryId], references: [id])
  menuCategoryId Int
  menu           Menu         @relation(fields: [menuId], references: [id])
  menuId         Int
  createAt       DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
   isArchived Boolean @default(false)
}

model MenuAddonCategory {
  id              Int           @id @default(autoincrement())
  menu            Menu          @relation(fields: [menuId], references: [id])
  menuId          Int
  addonCategory   AddonCategory @relation(fields: [addonCategoryId], references: [id])
  addonCategoryId Int
  
  createAt        DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
   isArchived Boolean @default(false)
}

model AddonCategory {
  id                Int                 @id @default(autoincrement())
   name      String
  createAt          DateTime            @default(now())
  updatedAt         DateTime            @updatedAt
   isArchived Boolean @default(false)
  addons   Addon[]
  menuAddonCategories MenuAddonCategory[]
}

model Addon {
  id        Int      @id @default(autoincrement())
   name      String
    price Int
  addonCategory AddonCategory @relation(fields: [addonCategoryId],references: [id])
  addonCategoryId Int
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
   isArchived Boolean @default(false)
}

model User{
  id Int @id @default(autoincrement())
  name String?
  email String @unique
  companyId Int
  company Company @relation(fields: [companyId],references: [id])
  createAt  DateTime @default(now())
  updatedAt DateTime @updatedAt
  isArchived Boolean @default(false)
}